#!/bin/env python

# Generated by ChatGPT

import matplotlib.pyplot as plt
import matplotlib.ticker as mticker
import matplotlib as mpl

# Enable LaTeX text rendering
mpl.rcParams.update({
    # "text.usetex": True,
    "font.family": "serif",
    "font.serif": ["Times New Roman"],  # or "Computer Modern" if you prefer default LaTeX fonts
    "axes.labelsize": 10,
    "axes.titlesize": 12,
    "xtick.labelsize": 9,
    "ytick.labelsize": 9,
    "legend.fontsize": 9,
    "axes.linewidth": 0.8,
    "xtick.direction": "in",
    "ytick.direction": "in",
    "grid.linestyle": "--",
    "grid.linewidth": 0.5,
    "pdf.fonttype": 42,
    "pgf.rcfonts": False,  # Do not override LaTeX fonts
})

# Read data
x: list[int] = []
y: list[float] = []
with open("data.csv", "r") as file:
    for line in file:
        if line.strip():
            x_val, y_val = line.strip().split(",")
            x.append(int(x_val))
            y.append(float(y_val))

# y ticks
y_lbl = [2**i for i in range(2, 10)]

# Plot
fig, ax = plt.subplots(figsize=(3.5, 1.8), layout="constrained")  # 3.5 inch for single column

ax.plot(x, y, marker="o", markersize=3, linestyle="-", linewidth=1, color="black")

ax.set_xscale("log", base=2)
ax.set_yscale("log", base=2)

# Limits
ax.set_xlim(min(x) * 0.8, max(x) * 1.2)
ax.set_ylim(2**0.8, 2**9 + 1)

# Labels (with LaTeX syntax)
ax.set_xlabel(r"Memory Size [kB]")
ax.set_ylabel(r"Latency [Cycles]")
# ax.set_title(r"Memory Access Latency", pad=8)

# Ticks
ax.set_xticks([2**i for i in range(2, 21, 3)])
ax.set_yticks(y_lbl)
ax.yaxis.set_major_formatter(mticker.ScalarFormatter())

# Grid (only major y)
ax.grid(True, which="major", axis="y")

# place the labels
ax.text(0.25, 0.12, 'L1', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)
ax.text(0.62, 0.30, 'L2', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)
ax.text(0.80, 0.49, 'LLC', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)
ax.text(0.945, 0.85, 'RAM', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)
ax.text(0.25, 0.12+0.2, '6', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)
ax.text(0.62, 0.30+0.2, '16', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)
ax.text(0.80, 0.49+0.2, '51', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)
ax.text(0.945, 0.85+0.2, '400', horizontalalignment='center',
     verticalalignment='center', transform=ax.transAxes)

# Remove top and right spines
ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

# Save to PGF (LaTeX-ready)
fig.savefig("memory_access_latency_ieee.pdf")
